# Дана строка S, состоящая из строчных латинских букв.
#
# Определите, совпадают ли строки одинаковой длины L, начинающиеся с позиций A и B.
#
# Формат ввода
# В первой строке записана S (1 ≤ |S| ≤ 2 ⋅ 10**5), состоящая из строчных латинских букв.
#
# Во второй строке записано число Q (1 ≤ Q ≤ 2 ⋅ 10**5) — количество запросов.
#
# В следющих Q строках записаны запросы: целые числа L, A и B (1 ≤ L ≤ |S|, 0 ≤ A, B ≤ (|S| - L)) —
# длина подстрок и позиции, с которых они начинаются.
#
# Формат вывода
# Если строки совпадают — выведите "yes", иначе — "no".

def substring_equality(a, b, length):
    return (h[a + length] + h[b] * x[length]) % p == (h[b + length] + h[a] * x[length]) % p


s = input()
n = len(s)
p = 10**9 + 7
x_ = 257
h = [0]*(n + 1)
x = [0]*(n + 1)
x[0] = 1
for i in range(n):
    h[i + 1] = (h[i] * x_ + ord(s[i])) % p
    x[i + 1] = (x[i] * x_) % p

q = int(input())
for _ in range(q):
    length, a, b = map(int, input().split())
    print("yes") if substring_equality(a, b, length) else print("no")
